import{_ as a,o as s,c as e,O as n}from"./chunks/framework.21cae6c2.js";const u=JSON.parse('{"title":"Setup Tanka","description":"","frontmatter":{"title":"Setup Tanka"},"headers":[],"relativePath":"getting-started/setup-tanka.md","filePath":"getting-started/setup-tanka.md"}'),t={name:"getting-started/setup-tanka.md"},l=n(`<h1 id="setup-tanka" tabindex="-1">Setup Tanka <a class="header-anchor" href="#setup-tanka" aria-label="Permalink to &quot;Setup Tanka&quot;">​</a></h1><h2 id="usage-with-docker" tabindex="-1">Usage with Docker <a class="header-anchor" href="#usage-with-docker" aria-label="Permalink to &quot;Usage with Docker&quot;">​</a></h2><p>You don&#39;t have Tanka installed locally? Start by setting up a Docker container. <br> Open a terminal in the folder where the project will be located and run:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--entrypoint</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sh</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> $HOME</span><span style="color:#C3E88D;">/.kube:/root/.kube</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> $PWD</span><span style="color:#C3E88D;">:/app</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">grafana/tanka</span></span></code></pre></div><p>You are now inside the Docker container with your kube config and the current folder mounted.</p><h2 id="initialize-tanka-project" tabindex="-1">Initialize Tanka Project <a class="header-anchor" href="#initialize-tanka-project" aria-label="Permalink to &quot;Initialize Tanka Project&quot;">​</a></h2><p>First create a folder for the project:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">k8s-observability</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">k8s-observability</span></span></code></pre></div><p>Now let Tanka initialize everything:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">tk</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span></code></pre></div><h2 id="install-libraries" tabindex="-1">Install Libraries <a class="header-anchor" href="#install-libraries" aria-label="Permalink to &quot;Install Libraries&quot;">​</a></h2><p>Use <code>jb</code> to install the k8s-observability lib:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">jb</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/hendric-dev/k8s-observability.git/observability-stack@main</span></span></code></pre></div>`,13),o=[l];function p(r,i,c,C,d,h){return s(),e("div",null,o)}const A=a(t,[["render",p]]);export{u as __pageData,A as default};
