import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.7c2782e4.js";const g=JSON.parse('{"title":"Custom Log Transformations","description":"","frontmatter":{"title":"Custom Log Transformations"},"headers":[],"relativePath":"advanced/custom-log-transformations.md","filePath":"advanced/custom-log-transformations.md"}'),e={name:"advanced/custom-log-transformations.md"},l=o(`<h1 id="custom-log-transformations" tabindex="-1">Custom Log Transformations <a class="header-anchor" href="#custom-log-transformations" aria-label="Permalink to &quot;Custom Log Transformations&quot;">​</a></h1><p>Log events can be diverse and it&#39;s unpredictable what kind of services are monitored. <br> Therefore the default configuration for Vector simply passes all log events to Loki.</p><p>But what if:</p><ul><li><em>There is a strange log format that needs to be converted</em></li><li><em>Multiple logs events have to be reduced to one to make sense</em></li><li><em>One service just keeps spamming log events that should be filtered out</em></li></ul><p>There are lots of possible scenarios, which can be solved by providing a custom Vector config for log transformations.</p><h2 id="_1-writing-a-vector-config" tabindex="-1">1. Writing a Vector Config <a class="header-anchor" href="#_1-writing-a-vector-config" aria-label="Permalink to &quot;1. Writing a Vector Config&quot;">​</a></h2><p>Vector is a great tool with lots of possibilities to transform logs and metrics. <br> Explaining Vector is way beyond the scope here. Visit <a href="https://vector.dev/docs/" target="_blank" rel="noreferrer">their documentation</a>, which is much better suited for this purpose.</p><p>But to give an example, let&#39;s write a config that:</p><ul><li>routes log events based on container name</li><li>filters out logs from Grafana with the message <code>unwanted-grafana-log-event</code></li><li>filters out logs from Loki with the message <code>unwanted-loki-log-event</code></li></ul><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">transforms</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">route_kubernetes_logs</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">type = </span><span style="color:#9ECBFF;">&#39;route&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">inputs = [</span><span style="color:#9ECBFF;">&#39;kubernetes_logs&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#B392F0;">transforms</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">route_kubernetes_logs</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">route</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  grafana = </span><span style="color:#9ECBFF;">&#39;.kubernetes.container_name == &quot;grafana&quot;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  loki = </span><span style="color:#9ECBFF;">&#39;.kubernetes.container_name == &quot;loki&quot;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  unknown = </span><span style="color:#9ECBFF;">&#39;!exists(.kubernetes.container_name)&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">transforms</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">filter_grafana_logs</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">type = </span><span style="color:#9ECBFF;">&#39;filter&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">inputs = [</span><span style="color:#9ECBFF;">&#39;route_kubernetes_logs.grafana&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">condition = </span><span style="color:#9ECBFF;">&#39;!contains!(.message, &quot;unwanted-grafana-log-event&quot;)&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">transforms</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">filter_loki_logs</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">type = </span><span style="color:#9ECBFF;">&#39;filter&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">inputs = [</span><span style="color:#9ECBFF;">&#39;route_kubernetes_logs.loki&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">condition = </span><span style="color:#9ECBFF;">&#39;!contains!(.message, &quot;unwanted-loki-log-event&quot;)&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">transforms</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">kubernetes_log_output</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">type = </span><span style="color:#9ECBFF;">&quot;filter&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">inputs = [</span><span style="color:#9ECBFF;">&quot;filter_grafana_logs&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;filter_loki_logs&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">condition = </span><span style="color:#9ECBFF;">&quot;true&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">transforms</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">route_kubernetes_logs</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">type = </span><span style="color:#032F62;">&#39;route&#39;</span></span>
<span class="line"><span style="color:#24292E;">inputs = [</span><span style="color:#032F62;">&#39;kubernetes_logs&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#6F42C1;">transforms</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">route_kubernetes_logs</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">route</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  grafana = </span><span style="color:#032F62;">&#39;.kubernetes.container_name == &quot;grafana&quot;&#39;</span></span>
<span class="line"><span style="color:#24292E;">  loki = </span><span style="color:#032F62;">&#39;.kubernetes.container_name == &quot;loki&quot;&#39;</span></span>
<span class="line"><span style="color:#24292E;">  unknown = </span><span style="color:#032F62;">&#39;!exists(.kubernetes.container_name)&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">transforms</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">filter_grafana_logs</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">type = </span><span style="color:#032F62;">&#39;filter&#39;</span></span>
<span class="line"><span style="color:#24292E;">inputs = [</span><span style="color:#032F62;">&#39;route_kubernetes_logs.grafana&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">condition = </span><span style="color:#032F62;">&#39;!contains!(.message, &quot;unwanted-grafana-log-event&quot;)&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">transforms</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">filter_loki_logs</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">type = </span><span style="color:#032F62;">&#39;filter&#39;</span></span>
<span class="line"><span style="color:#24292E;">inputs = [</span><span style="color:#032F62;">&#39;route_kubernetes_logs.loki&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">condition = </span><span style="color:#032F62;">&#39;!contains!(.message, &quot;unwanted-loki-log-event&quot;)&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">transforms</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">kubernetes_log_output</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">type = </span><span style="color:#032F62;">&quot;filter&quot;</span></span>
<span class="line"><span style="color:#24292E;">inputs = [</span><span style="color:#032F62;">&quot;filter_grafana_logs&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;filter_loki_logs&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">condition = </span><span style="color:#032F62;">&quot;true&quot;</span></span></code></pre></div><blockquote><p>IMPORTANT <br> There are two naming conventions that needs to be adhered to:</p><ul><li>The input to the transform is always named <code>kubernetes_logs</code></li><li>The output needs to be aggregated by a filter with the name <code>kubernetes_log_output</code></li></ul><p>Those are the names that the source and sink are using</p></blockquote><h2 id="_2-add-the-config" tabindex="-1">2. Add the Config <a class="header-anchor" href="#_2-add-the-config" aria-label="Permalink to &quot;2. Add the Config&quot;">​</a></h2><p>All that&#39;s left to do is to replace the default transformation with the custom one.</p><p>Assuming the Vector config is placed under <code>vector/custom-log-filter.toml</code> next to the Tanka <code>environments</code> folder.</p><p>In your <code>environments/&lt;my-environment&gt;/config.jsonnet</code> add the following:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  vector</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    logging+:: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      kubernetes+: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        transformations: [importstr </span><span style="color:#9ECBFF;">&#39;../../vector/custom-log-filter.toml&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  vector</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    logging+:: {</span></span>
<span class="line"><span style="color:#24292E;">      kubernetes+: {</span></span>
<span class="line"><span style="color:#24292E;">        transformations: [importstr </span><span style="color:#032F62;">&#39;../../vector/custom-log-filter.toml&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Seeing that the option is an array, it is also possible to split the config into multiple files, to keep complex transformations readable. Just remember to keep to the naming convention for input and output as mentioned above.</p><h2 id="_3-verify" tabindex="-1">3. Verify <a class="header-anchor" href="#_3-verify" aria-label="Permalink to &quot;3. Verify&quot;">​</a></h2><p>Tanka can be used to take a look at the final Vector config:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">tk</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">show</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">configmap/vector</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">environment/</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">my-environmen</span><span style="color:#E1E4E8;">t</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">tk</span><span style="color:#24292E;"> </span><span style="color:#032F62;">show</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">configmap/vector</span><span style="color:#24292E;"> </span><span style="color:#032F62;">environment/</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">my-environmen</span><span style="color:#24292E;">t</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div>`,20),t=[l];function p(r,c,i,E,y,u){return n(),a("div",null,t)}const m=s(e,[["render",p]]);export{g as __pageData,m as default};
