{
  "annotations": {
    "list": [
      {
        "$$hashKey": "object:1058",
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 1860,
  "graphTooltip": 0,
  "iteration": 1656880164424,
  "links": [
    {
      "icon": "external link",
      "tags": [],
      "title": "Github",
      "type": "link",
      "url": "https://github.com/rfrail3/grafana-dashboards"
    },
    {
      "icon": "external link",
      "tags": [],
      "title": "Grafana",
      "type": "link",
      "url": "https://grafana.com/grafana/dashboards/1860"
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "datasource": {
        "uid": "Prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 261,
      "panels": [],
      "title": "Node Resource Usage",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "Average CPU usage of the recent 2min ",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 80
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 90
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 1
      },
      "id": 20,
      "links": [],
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "cpu_usage_percent = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r._measurement == \"host.cpu_seconds_total\")\n  |> drop(columns: [\"collector\", \"cpu\", \"host\", \"metric_type\"])\n  |> mean()\n  |> pivot(rowKey: [\"node\"], columnKey: [\"mode\"], valueColumn: \"_value\")\n  |> reduce(\n       fn: (r, accumulator) => ({_value: (r.nice + r.system + r.user) / (r.idle + r.nice + r.system + r.user)}),\n       identity: { _value: 0.0 }\n     )\n\nif \"${node}\" == \"all\"\nthen cpu_usage_percent\n  |> group()\n  |> mean()\n  |> yield(name: \"cpu_usage_percent\")\nelse cpu_usage_percent\n  |> filter(fn: (r) => r.node == \"${node}\")\n  |> yield(name: \"cpu_usage_percent\")",
          "refId": "A"
        }
      ],
      "title": "CPU Usage",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "Average memory usage of the recent 2min",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 80
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 90
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 4,
        "y": 1
      },
      "hideTimeOverride": false,
      "id": 16,
      "links": [],
      "options": {
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "memory_usage_percent = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r._measurement == \"host.memory_total_bytes\" or r._measurement == \"host.memory_used_bytes\")\n  |> drop(columns: [\"collector\", \"host\", \"metric_type\"])\n  |> mean()\n  |> pivot(rowKey: [\"node\"], columnKey: [\"_measurement\"], valueColumn: \"_value\")\n  |> reduce(\n       fn: (r, accumulator) => ({_value: r[\"host.memory_used_bytes\"] / r[\"host.memory_total_bytes\"]}),\n       identity: { _value: 0.0 }\n     )\n\nif \"${node}\" == \"all\"\nthen memory_usage_percent\n  |> group()\n  |> mean()\n  |> yield(name: \"memory_usage_percent\")\nelse memory_usage_percent\n  |> filter(fn: (r) => r.node == \"${node}\")\n  |> yield(name: \"memory_usage_percent\")",
          "refId": "A"
        }
      ],
      "title": "Memory Usage",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 80
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 90
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 8,
        "y": 1
      },
      "id": 154,
      "links": [],
      "options": {
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "filesystem_usage_percent = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r.mountpoint == \"/\" and (r._measurement == \"host.filesystem_total_bytes\" or r._measurement == \"host.filesystem_used_bytes\"))\n  |> last()\n  |> drop(columns: [\"collector\", \"device\", \"filesystem\", \"host\", \"metric_type\", \"mountpoint\"])\n  |> pivot(rowKey: [\"node\"], columnKey: [\"_measurement\"], valueColumn: \"_value\")\n  |> reduce(\n       fn: (r, accumulator) => ({_value: r[\"host.filesystem_used_bytes\"] / r[\"host.filesystem_total_bytes\"]}),\n       identity: { _value: 0.0 }\n     )\n\nif \"${node}\" == \"all\"\nthen filesystem_usage_percent\n  |> group()\n  |> mean()\n  |> yield(name: \"filesystem_usage\")\nelse filesystem_usage_percent\n  |> filter(fn: (r) => r.node == \"${node}\")\n  |> yield(name: \"filesystem_usage\")",
          "refId": "A"
        }
      ],
      "title": "Filesystem Usage",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 12,
        "y": 1
      },
      "hideTimeOverride": true,
      "id": 15,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "uptime = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r._measurement == \"host.uptime\")\n  |> last()\n  |> keep(columns: [\"_value\", \"node\"])\n\nif \"${node}\" == \"all\"\n  then uptime\n    |> group()\n    |> max()\n    |> yield(name: \"uptime\")\n  else uptime\n    |> filter(fn: (r) => r.node == \"${node}\")\n    |> yield(name: \"uptime\")",
          "refId": "A"
        }
      ],
      "title": "Uptime",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Cores"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 0,
        "y": 5
      },
      "id": 266,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "cpu_cores_total = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r._measurement == \"host.cpu_seconds_total\")\n  |> last()\n  |> keep(columns: [\"cpu\", \"node\"])\n  |> group(columns: [\"node\"])\n  |> rename(columns: {\"cpu\": \"_value\"},)\n  |> toInt()\n  |> max()\n  |> map(fn: (r) => ({ r with _value: r._value + 1 }))\n  |> rename(columns: {\"_value\": \"cpu_cores_total\"})\n\ncpu_usage_percent = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r._measurement == \"host.cpu_seconds_total\")\n  |> keep(columns: [\"_value\", \"node\", \"mode\"])\n  |> mean()\n  |> pivot(rowKey: [\"node\"], columnKey: [\"mode\"], valueColumn: \"_value\")\n  |> reduce(\n       fn: (r, accumulator) => ({_value: (r.nice + r.system + r.user) / (r.idle + r.nice + r.system + r.user)}),\n       identity: { _value: 0.0 }\n     )\n\ncpu_cores_used = join(tables: {key1: cpu_cores_total, key2: cpu_usage_percent}, on: [\"node\"], method: \"inner\")\n  |> map(fn: (r) => ({ r with _value: float(v: r.cpu_cores_total) * r._value }))\n  |> drop(columns: [\"cpu_cores_total\"])\n\nif \"${node}\" == \"all\"\nthen cpu_cores_used\n  |> group()\n  |> sum()\n  |> yield(name: \"cpu_cores_used\")\nelse cpu_cores_used\n  |> filter(fn: (r) => r.node == \"${node}\")\n  |> yield(name: \"cpu_cores_used\")",
          "refId": "A"
        }
      ],
      "title": "Used",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Cores"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 2,
        "y": 5
      },
      "id": 14,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "cpu_cores_total = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r._measurement == \"host.cpu_seconds_total\")\n  |> last()\n  |> keep(columns: [\"cpu\", \"node\"])\n  |> group(columns: [\"node\"])\n  |> rename(columns: {\"cpu\": \"_value\"},)\n  |> toInt()\n  |> max()\n  |> map(fn: (r) => ({ r with _value: r._value + 1 }))\n\nif \"${node}\" == \"all\"\n  then cpu_cores_total\n    |> group()\n    |> sum()\n    |> yield(name: \"cpu_cores_total\")\n  else cpu_cores_total\n    |> filter(fn: (r) => r.node == \"${node}\")\n    |> yield(name: \"cpu_cores_total\")",
          "refId": "A"
        }
      ],
      "title": "Total",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 70
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 90
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 4,
        "y": 5
      },
      "id": 264,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "memory_used_bytes = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r._measurement == \"host.memory_used_bytes\")\n  |> last()\n  |> keep(columns: [\"_value\", \"node\"])\n\nif \"${node}\" == \"all\"\n  then memory_used_bytes\n    |> group()\n    |> sum()\n    |> yield(name: \"memory_used_bytes\")\n  else memory_used_bytes\n    |> filter(fn: (r) => r.node == \"${node}\")\n    |> yield(name: \"memory_used_bytes\")",
          "refId": "A"
        }
      ],
      "title": "Used",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 6,
        "y": 5
      },
      "id": 75,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "memory_total_bytes = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r._measurement == \"host.memory_total_bytes\")\n  |> last()\n  |> keep(columns: [\"_value\", \"node\"])\n\nif \"${node}\" == \"all\"\n  then memory_total_bytes\n    |> group()\n    |> sum()\n    |> yield(name: \"memory_total_bytes\")\n  else memory_total_bytes\n    |> filter(fn: (r) => r.node == \"${node}\")\n    |> yield(name: \"memory_total_bytes\")",
          "refId": "A"
        }
      ],
      "title": "Total",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 8,
        "y": 5
      },
      "id": 265,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "filesystem_used_bytes = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r.mountpoint == \"/\" and r._measurement == \"host.filesystem_used_bytes\")\n  |> last()\n  |> keep(columns: [\"node\", \"_value\"])\n\nif \"${node}\" == \"all\"\n  then filesystem_used_bytes\n    |> group()\n    |> sum()\n    |> yield(name: \"filesystem_used_bytes\")\n  else filesystem_used_bytes\n    |> filter(fn: (r) => r.node == \"${node}\")\n    |> yield(name: \"filesystem_used_bytes\")",
          "refId": "A"
        }
      ],
      "title": "Used",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 70
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 90
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 10,
        "y": 5
      },
      "id": 23,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "filesystem_total_bytes = from(bucket: \"metrics\")\n  |> range(start: -2m)\n  |> filter(fn: (r) => r.mountpoint == \"/\" and r._measurement == \"host.filesystem_total_bytes\")\n  |> last()\n  |> keep(columns: [\"node\", \"_value\"])\n\nif \"${node}\" == \"all\"\n  then filesystem_total_bytes\n    |> group()\n    |> sum()\n    |> yield(name: \"filesystem_total_bytes\")\n  else filesystem_total_bytes\n    |> filter(fn: (r) => r.node == \"${node}\")\n    |> yield(name: \"filesystem_total_bytes\")\n ",
          "refId": "A"
        }
      ],
      "title": "Total",
      "type": "stat"
    },
    {
      "collapsed": false,
      "datasource": {
        "uid": "Prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 263,
      "panels": [],
      "title": "Historical Resource Usage",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 40,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "id": 77,
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "from(bucket: \"metrics\")\n  |> range(start: v.timeRangeStart)\n  |> filter(fn: (r) => r._measurement == \"host.cpu_seconds_total\")\n  |> aggregateWindow(every: ${interval}, fn: mean)\n  |> pivot(rowKey: [\"_time\", \"node\"], columnKey: [\"mode\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ r with _value: (r.nice + r.system + r.user) / (r.idle + r.nice + r.system + r.user) }))\n  |> keep(columns: [\"_time\", \"_value\", \"node\"])\n",
          "refId": "A"
        }
      ],
      "title": "CPU Usage (${interval} average)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 40,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 8
      },
      "id": 78,
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "from(bucket: \"metrics\")\n  |> range(start: v.timeRangeStart)\n  |> filter(fn: (r) => r._measurement == \"host.memory_used_bytes\")\n  |> keep(columns: [\"_time\", \"_value\", \"node\"])\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "hide": false,
          "query": "from(bucket: \"metrics\")\n  |> range(start: v.timeRangeStart)\n  |> filter(fn: (r) => r._measurement == \"host.memory_total_bytes\")\n  |> rename(columns: {\"_value\": \"total\"})\n  |> keep(columns: [\"node\", \"total\"])\n",
          "refId": "B"
        }
      ],
      "title": "Memory Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 40,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "id": 152,
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "from(bucket: \"metrics\")\n  |> range(start: v.timeRangeStart)\n  |> filter(fn: (r) => r.mountpoint == \"/\" and r._measurement == \"host.filesystem_used_bytes\")\n  |> keep(columns: [\"_time\", \"_value\", \"node\"])\n",
          "refId": "A"
        }
      ],
      "title": "Filesystem Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PA58DA793C7250F1B"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisPlacement": "auto",
            "axisSoftMax": 50000,
            "axisSoftMin": -50000,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 40,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "id": 74,
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PA58DA793C7250F1B"
          },
          "query": "from(bucket: \"metrics\")\n  |> range(start: v.timeRangeStart)\n  |> filter(fn: (r) => (r._measurement == \"host.network_receive_bytes_total\" or r._measurement == \"host.network_transmit_bytes_total\") and r.device != \"lo\")\n  |> map(fn: (r) => ({\n      r with _value: if r._measurement == \"host.network_receive_bytes_total\" then r._value else -r._value,\n             _measurement: if r._measurement == \"host.network_receive_bytes_total\" then \"received\" else \"transmitted\",\n    }))\n  |> keep(columns: [\"_measurement\", \"_time\", \"_value\", \"node\"])\n",
          "refId": "A"
        }
      ],
      "title": "Network Usage",
      "type": "timeseries"
    }
  ],
  "refresh": "1m",
  "schemaVersion": 36,
  "style": "dark",
  "tags": [
    "linux"
  ],
  "templating": {
    "list": [
      {
        "allValue": "all",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "PA58DA793C7250F1B"
        },
        "definition": "from(bucket: \"metrics\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"host.cpu_seconds_total\")\n  |> keep(columns: [\"node\"])\n  |> distinct(column: \"node\")\n  |> group()\n",
        "description": "Name of the Kubernetes node",
        "hide": 0,
        "includeAll": true,
        "label": "Node:",
        "multi": false,
        "name": "node",
        "options": [],
        "query": "from(bucket: \"metrics\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"host.cpu_seconds_total\")\n  |> keep(columns: [\"node\"])\n  |> distinct(column: \"node\")\n  |> group()\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "auto": false,
        "auto_count": 30,
        "auto_min": "10s",
        "current": {
          "selected": false,
          "text": "1m",
          "value": "1m"
        },
        "description": "The interval used to calculate the metrics. Smaller values give more accurate graphs, but take longer to execute.",
        "hide": 0,
        "label": "Interval:",
        "name": "interval",
        "options": [
          {
            "selected": true,
            "text": "1m",
            "value": "1m"
          },
          {
            "selected": false,
            "text": "5m",
            "value": "5m"
          },
          {
            "selected": false,
            "text": "15m",
            "value": "15m"
          },
          {
            "selected": false,
            "text": "30m",
            "value": "30m"
          },
          {
            "selected": false,
            "text": "1h",
            "value": "1h"
          },
          {
            "selected": false,
            "text": "12h",
            "value": "12h"
          },
          {
            "selected": false,
            "text": "1d",
            "value": "1d"
          }
        ],
        "query": "1m,5m,15m,30m,1h,12h,1d",
        "queryValue": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "browser",
  "title": "Host Metrics",
  "uid": "nesBbS77k",
  "version": 1,
  "weekStart": ""
}